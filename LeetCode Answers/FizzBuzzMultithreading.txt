public class FizzBuzz {
    private int n;
    private readonly object locker = new();
    private int token;

    public FizzBuzz(int n) {
        this.n = n;
        this.token = 1;
    }

    // printFizz() outputs "fizz".
    public void Fizz(Action printFizz) {
        while(true)
        {
         lock(locker)
         {
           if (token > n) return;
           if( token % 3 == 0 && token % 5 != 0 )
           {
             printFizz.Invoke();
             token++;
           }
         }
        }
    }

    // printBuzzz() outputs "buzz".
    public void Buzz(Action printBuzz) {
        while(true)
        {
         lock(locker)
         {
           if (token > n) return;
           if( token % 5 == 0 && token % 3 != 0 )
           {
             printBuzz.Invoke();
             token++;
           }
         }
        }
    }

    // printFizzBuzz() outputs "fizzbuzz".
    public void Fizzbuzz(Action printFizzBuzz) {
        while(true)
        {
         lock(locker)
         {
           if (token > n) return;
           if( token % 3 == 0 && token % 5 == 0 )
           {
             printFizzBuzz.Invoke();
             token++;
           }
         }
        }
    }

    // printNumber(x) outputs "x", where x is an integer.
    public void Number(Action<int> printNumber) {
        while(true)
        {
         lock(locker)
         {
           if (token > n) return;
           if( token % 3 != 0 && token % 5 != 0 )
           {
             printNumber.Invoke(token);
             token++;
           }
         }
        }
    }
    
}